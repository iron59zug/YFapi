//@version=5
// volume ptofile test code
// Author: iron59zug
// Date: 2023-02-23
// Version: 1.0

indicator("Volume Profile ESO", overlay=true)

//input
var bool show_vp = input.bool(true, "Show Volume Profile")
var int start_hour = input.int(9, "Start Hour", minval=0, maxval=23)
var int end_hour = input.int(16, "End Hour", minval=0, maxval=23)

//vars
var float vp_high = na
var float vp_low = na
var float vp_range = na
var float vp_interval = na
var float[] vp_bars = array.new_float(0)

if barstate.islast
  //range
  vp_high := high[1]
  vp_low := low[1]
  for i = 1 to 50
    vp_high := max(vp_high, high[i])
    vp_low := min(vp_low, low[i])
   vp_range := vp_high - vp_low
   
   //vp interfal
   vp_interval := vp_range / 20.0
   for i = 0 to 19
    array.push(vp_bars, 0)
    
   //calc
   for i = 0 to 4999
    if time[i] >= timestamp(year, month, dayofmonth, start_hour, 0, 0) and time[i] <= timestamp(year, month, dayofmonth, end_hour, 0, 0)
      vp_index = int((close[i] - vp_low) / vp_interval)
      array.set(vp_bars, vp_index, array.get(vp_bars, vp_index) + volume[i])
      
//plot
if show_vp
    for i = 0 to 19
        vp_price = vp_low + i * vp_interval
        vp_volume = array.get(vp_bars, i)
        plot(vp_volume, vp_price, "Volume Profile", color.new(color.blue, 50), plot.style_area)



    

   
